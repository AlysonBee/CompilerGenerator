
#include <stdlib.h>
#include <stdio.h>

typedef struct	s_info 
{
	char 		*name;
	metaData	*metadata;
	int 		deriv_number;
	void		*prev;
	void		*next;
}	t_info;

{% for nonterm in nonterminals %}	
typedef struct s_{{ nonterm.grammarName }} {
	char 		*name;
	metaData	*metadata;
	int 		deriv_number;
	void		*prev;
	void		*next;
	errormsg	*error;

	{%- for i, descrip in zip(range(0, nonterm.TEST_Len), nonterm.grammarDescription) %}
	struct s_{{ descrip }} *_{{ descrip }}{{ i }};
	{%- endfor %}
}	t_{{ nonterm.grammarName }};
{% endfor %}


{% for nonterm in nonterminals %}
void 	*init_nonterm_{{ nonterm.grammarName }} () {
	t_{{ nonterm.grammarName }} *new_ptr;

	new_ptr->name = strdup("{{ nonterm.stringValue }}");
	new_ptr->metadata = (metaData *)malloc(sizeof(metaData));
	new_ptr->error = (errormsg *)malloc(sizeof(errormsg));
	{%- for i, descrip in zip(range(0, nonterm.TEST_Len ), nonterm.grammarDescription) %}
	new_ptr->_{{ descrip }}{{ i }} = (struct s_{{ descrip }}*)malloc(sizeof(struct s_{{ descrip }}));
	{%- endfor %}
	return (new_ptr);
}
{% endfor %}

