/*
** This file is autogenerated. Edit at your own peril.
*/

#include <stdlib.h>
#include <string.h>

typedef struct s_error {
        void *none;
}       errormsg;

typedef struct s_metaData {
	char 	*name;
	int 	line;

	char	*error;
}	metaData;

{% for term in terminals %}

// Struct for s_{{ term.grammarName }}
typedef struct	s_{{ term.grammarName }} {
	char 		*name;
	metaData 	*metadata;
	int 		deriv_number;
	void		*prev;
	errormsg 	*error;
}	t_{{ term.grammarName }};

t_{{ term.grammarName }} *init_term_{{ term.grammarName }}() {
	t_{{ term.grammarName }} *new_term = (t_{{ term.grammarName }} *)malloc(sizeof(t_{{ term.grammarName }}));

	new_term->name = strdup("{{ term.stringValue}}");
	new_term->metadata = (metaData *)malloc(sizeof(metaData));
	new_term->deriv_number = {{ term.derivNum }};
	new_term->error = (errormsg *)malloc(sizeof(errormsg));
	return (new_term);
}
{% endfor %}

